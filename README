edit: simple terminal text editor for linux

This is a reference frontend implementation using the edit_core backend.
Edit is intended to be used inside a terminal that supports keyboard enhancement(tested with alacritty).
if using a terminal without keyboard enhancement, you may have to rebind the default keybindings...

Unix is the IDE...edit is the text editor component of that IDE.

Features:
    Editing and movement features implemented in edit_core
        [x]
    User Interface(all elements themeable):
        [ ] Text Document
            [x] ascii text rendering
            [ ] utf-8 text rendering
            [x] cursor/selection rendering(done for document, still WIP in utilities)
            [ ] cursor line (highlight the line the primary cursor is on)
            [ ] cursor column (highlight the column the primary cursor is on)
            [ ] suggestions/completion(from previously used words)
        [ ] Scroll bar(shows relative location in document)(handle should be proportional to view size and backdrop should be proportional to doc len)
        [x] Toggleable Line Numbers
            [x] absolute(works with raw text. annotations/collapsing/other display decorations is WIP)
            [ ] relative
        [x] Toggleable Status Bar
            [x] Modified Indicator
            [x] File name
            [ ] Read Only Indicator
            [x] Selection Indicator(1/1 = primary cursor is the only one, 3/125 = primary cursor is the 3rd selection of 125)
            [x] primary cursor location indicator(line num:column num)
        [ ] Utility Bar(mode specific) (should utils have suggestions/completion?)
            [x] Go to Mode  (should have popup with available commands?...)
                [x] use input as line number
                [ ] use input as amount for following relative motion command (up, down, left, right, etc.)
                [ ] to matching surround
            [x] Command mode    (should provide list of available commands)
                [x] built in and custom commands
            [ ] Search Mode
                [x] search inside extended selections
                [ ] search whole document if no selection extended
                [x] match regex pattern
                [x] incremental search
            [ ] Split Mode
                [x] match regex pattern
                [x] incremental split
            [x] Warning Mode(blocking display useful warnings and visual responses to redundant/unhandled input)
                [x] File modified
                [x] Save failed
                [x] Command parse failed
                [x] Single selection
                [x] Multiple selections
                [x] Invalid input
                [x] Same state
                [x] Unhandled error
                [x] Unhandled keypress
                [x] Unhandled event
            [x] Notify Mode(non-blocking display useful notifications and visual responses to input)
                [x] Text copied
            [ ] Shell Mode
                [ ] pipe selection(s) to external utility and replace selection(s) with utility output
                [ ] call external utility and insert at/replace selection(s) with utility output
        [ ] Popups(mode specific)(should be hideable from config)
            [ ] View Mode
                [x] scroll up, down, left, right
                [x] center view vertically around primary cursor
                [ ] center view horizontally around primary cursor
                [ ] align view with primary cursor at top
                [ ] align view with primary cursor at bottom
            [ ] Object Mode (for text object selection)
                [ ] word
                [ ] sentence
                [ ] paragraph
                [ ] surrounding pair
                [ ] exclusive surrounding pair
                [ ] inclusive surrounding pair
            [ ] Goto Mode

    
    File Operations(Open/Close/Save)
        [x] yes
    Performance
        [ ] make performant (trying, but i honestly have no clue what i am doing...)

    Customization and Extensibility
        [ ] user config file
        [ ] custom keybinds

Future Features:
    edit_server/daemon mode?
    Code Editing:
        [ ] LSP
        [ ] TreeSitter
        [ ] DAP
        [ ] ...more
    interactive keybind/command re-binding?

Non-Features:
    cross platform usability
    tabs/splits (this is the job of a window manager/terminal multiplexer)
    auto save   (just save the damn thing manually. wtf?!)
    macros  (maybe useful? but i never have...)
    text wrapping   (is this something i want to even bother with?)


to install:
    make sure you have rust installed: https://www.rust-lang.org/tools/install
    clone repo
    in directory you cloned the repo to, run:
        cargo install --path .

    this will create a binary at ~/.cargo/bin/edit

to uninstall:
    either delete 'edit' file at ~/.cargo/bin/edit
    or run:
        cargo uninstall edit
